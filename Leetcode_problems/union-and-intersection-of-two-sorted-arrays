//using 2 pointer technique
//TC:WORST CASE:O(N1+N2)
//SC:
//INTERSECTION OF A AND B sorted arrays
import java.util.*;
public class Main
{
	public static void main(String[] args) {
		int a[]={1,2,2,3,3,4,5,6};
		int b[]={2,3,3,5,6,6,7};
		int n1=a.length;
		int n2=b.length;
		int i=0,j=0;
		ArrayList<Integer> al=new ArrayList<>();
		while(i<n1 && j<n2)
		{
		    if(a[i]<b[j])
		    {
		        i++;
		    }
		    else if(b[j]<a[i])
		    {
		        j++;
		    }
		    else{
		        al.add(a[i]);
		        i++;
		        j++;
		    }
		}
		for(int ele:al)
		{
		    System.out.print(ele+" ");
		}
	}
}

//TC:WORST CASE:O(N1+N2)
//SC:
//Union OF A AND B sorted arrays
import java.util.*;
public class Main
{
	public static void main(String[] args) {
		int a[]={1,2,2,3,3,4,5,6};
		int b[]={2,3,3,5,6,6,7};
		int n1=a.length;
		int n2=b.length;
		int i=0,j=0;
		ArrayList<Integer> al=new ArrayList<>();
		while(i<n1 && j<n2)
		{
		    if(a[i]<=b[j])
		    {
		        if(al.size()==0 || al.get(al.size()-1)!=a[i])
		        {
		            al.add(a[i]);
		        }
		        i+=1;
		    }
		    else{
		        if(al.size()==0 || al.get(al.size()-1)!=b[j])
		        {
		            al.add(b[j]);
		        }
		        j+=1;
		    }
		}
		while(i<n1)
		{   if(al.get(al.size()-1)!=a[i]){
		    al.add(a[i]);
		    }
		    i+=1;
		}
		while(j<n2)
		{   if(al.get(al.size()-1)!=b[j]){
		    al.add(b[j]);
		    }
		    j+=1;
		}
		for(int ele:al)
		{
		    System.out.print(ele+" ");
		}
	}
}
