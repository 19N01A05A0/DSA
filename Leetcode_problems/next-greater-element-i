class Solution {
    public int[] nextGreaterElement(int[] nums1, int[] nums2) {
        Stack<Integer> st=new Stack<>();
        int n1=nums1.length;
        int n2=nums2.length;
        int nge[]=new int[n2];
        int res[]=new int[n1];
        /*for(int i=0;i<nums2.length;i++) //PSE
        {
            while(!st.isEmpty() && st.peek()>=nums2[i])
            {
                st.pop();
            }
            if(st.isEmpty())
            {
                ans[i]=-1;
            }
            else
            {
                ans[i]=st.peek();
            }
            st.add(nums2[i]);
        }
        for(int i=nums2.length-1;i>=0;i--)  //NSE
        {
            while(!st.isEmpty() && st.peek()>=nums2[i])
            {
                st.pop();
            }
            if(st.isEmpty())
            {
                ans[i]=-1;
            }
            else
            {
                ans[i]=st.peek();
            }
            st.add(nums2[i]);
        }*/
        /*for(int i=0;i<nums2.length;i++) //PGE
        {
            while(!st.isEmpty() && st.peek()<=nums2[i])
            {
                st.pop();
            }
            if(st.isEmpty())
            {
                ans[i]=-1;
            }
            else
            {
                ans[i]=st.peek();
            }
            st.add(nums2[i]);
        }*/
        for(int i=nums2.length-1;i>=0;i--) //NGE
        {
            while(!st.isEmpty() && st.peek()<=nums2[i])
            {
                st.pop();
            }
            if(st.isEmpty())
            {
                nge[i]=-1;
            }
            else
            {
                nge[i]=st.peek();
            }
            st.add(nums2[i]);
        }
        /*for(int i=0;i<ans.length;i++)
        {
            System.out.println(ans[i]+" ");
        }*/
        for(int i=0;i<n1;i++)
        {
            for(int j=0;j<n2;j++)
            {
                if(nums1[i]==nums2[j])
                {
                    res[i]=nge[j];
                }
            }
        }
        return res;
    }
}
