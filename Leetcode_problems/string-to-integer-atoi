class Solution {
    public int myAtoi(String s) {
        /* if(s==null) return 0;

        s=s.trim();
        
        if(s.length()==0) return 0;
        
        int sign = +1;
        long ans = 0;
        if(s.charAt(0) == '-') sign = -1;
        
        int MAX = Integer.MAX_VALUE, MIN = Integer.MIN_VALUE;
		
		// initiate the starting pointer
        int i = (s.charAt(0) == '+' || s.charAt(0) == '-') ? 1 : 0;
		
        while(i < s.length()) {
            if(s.charAt(i) == ' ' || !Character.isDigit(s.charAt(i))) break;
            ans = ans * 10 + s.charAt(i)-'0';
            // check the conditions
            if(sign == -1 && -1*ans < MIN) return MIN;
            if(sign == 1 && ans > MAX) return MAX;
            
            i++;
        }
        
        return (int)(sign*ans);*/
        String newstr=s.trim();
        //System.out.println(newstr+""+newstr.length());
        long ans=0;
        int sign=+1;
        int mx=Integer.MAX_VALUE;
        int mn=Integer.MIN_VALUE;
        if(newstr.length()==0)
        {
            return 0;
        }
        if(newstr.charAt(0)=='-')
        {
            sign=-1;
        }
        int i = (newstr.charAt(0) == '+' || newstr.charAt(0) == '-') ? 1 : 0;
        while(i<newstr.length())
        {
            //System.out.println(i+" "+newstr.charAt(i));
            if(newstr.charAt(i)==' '||!Character.isDigit(newstr.charAt(i)))
            {
                break;
            }
            else
            {
                ans=ans*10+newstr.charAt(i)-'0';
                //System.out.println(ans);
                if(sign==1&&1*ans>mx)
                {
                    return mx;
                }
                if(sign==-1&&-1*ans<mn)
                {
                    return mn;
                }
            }
            i+=1;
        }
        return (int)(ans*sign);
    }
}
