/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
 //TC:O(N)
 //SC:O(N)//auxilry
class Solution {
    public int maxPathSum(TreeNode root) {
        int res[]=new int[1];
        res[0]=Integer.MIN_VALUE;
        helper(root,res);
        return res[0];
    }
    public int helper(TreeNode root,int[] res)
    {
        if(root==null)
        {
            return 0;
        }
        int left=helper(root.left,res);
        int right=helper(root.right,res);
        int max_straight=Math.max(Math.max(left,right)+root.val,root.val);
        int max_case=Math.max(max_straight,left+right+root.val);
        res[0]=Math.max(res[0],max_case);
        return max_straight;
    }
}
