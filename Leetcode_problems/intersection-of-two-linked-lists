/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode getIntersectionNode(ListNode headA, ListNode headB) {
        int len1=findLength(headA);
        int len2=findLength(headB);
        ListNode tempA=headA;
        ListNode tempB=headB;
        if(len1>len2)
        {
            while(len1>len2)
            {   len1--;
                tempA=tempA.next;
            }
        }
        else
        {
            while(len2>len1)
            {   len2--;
                tempB=tempB.next;
            }
        }
        while(tempA!=tempB)
        {
            tempA=tempA.next;
            tempB=tempB.next;
        }
        return tempA;
    }
    public int findLength(ListNode node)
    {   int len=0;
        ListNode temp=node;
        while(temp!=null)
        {
            len++;
            temp=temp.next;
        }
        return len;
    }
}
